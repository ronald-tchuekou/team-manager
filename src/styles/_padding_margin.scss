/********************\
    Padding
\********************/
$paddings: '', 'b', 't', 'l', 'r', 'x', 'y';
@mixin generatePadding($prefix: '') {
    @each $padding in $paddings {
        $p_type: '';
        @if $padding == 'b' {
            $p_type: '-bottom';
        } @else if $padding == 't' {
            $p_type: '-top';
        } @else if $padding == 'l' {
            $p_type: '-left';
        } @else if $padding == 'r' {
            $p_type: '-right';
        }
        @for $i from 0 through 50 {
            .#{$prefix}p#{$padding}-#{$i} {
                @if $padding == 'x' {
                    @if $i == 0 {
                        padding-left: 0 !important;
                        padding-right: 0 !important;
                    } @else {
                        padding-left: $i + px !important;
                        padding-right: $i + px !important;
                    }
                } @else if $padding == 'y' {
                    @if $i == 0 {
                        padding-top: 0 !important;
                        padding-bottom: 0 !important;
                    } @else {
                        padding-top: $i + px !important;
                        padding-bottom: $i + px !important;
                    }
                } @else {
                    @if $i == 0 {
                        padding#{$p_type}: 0 !important;
                    } @else {
                        padding#{$p_type}: $i + px !important;
                    }
                }
            }
        }
    }
}

/********************\
    Margin
\********************/
$margins: '', 'b', 't', 'l', 'r', 'x', 'y';
@mixin generateMargin($prefix) {
    @each $margin in $margins {
        $m_type: '';
        @if $margin == 'b' {
            $m_type: '-bottom';
        } @else if $margin == 't' {
            $m_type: '-top';
        } @else if $margin == 'l' {
            $m_type: '-left';
        } @else if $margin == 'r' {
            $m_type: '-right';
        }
        @for $i from 0 through 50 {
            .#{$prefix}m#{$margin}-#{$i} {
                @if $margin == 'x' {
                    @if $i == 0 {
                        margin-left: 0 !important;
                        margin-right: 0 !important;
                    } @else {
                        margin-left: $i + px !important;
                        margin-right: $i + px !important;
                    }
                } @else if $margin == 'y' {
                    @if $i == 0 {
                        margin-top: 0 !important;
                        margin-bottom: 0 !important;
                    } @else {
                        margin-top: $i + px !important;
                        margin-bottom: $i + px !important;
                    }
                } @else {
                    @if $i == 0 {
                        margin#{$m_type}: 0 !important;
                    } @else {
                        margin#{$m_type}: $i + px !important;
                    }
                }
            }
        }
    }
}

@mixin generateGlobal($prefix) {
    .#{$prefix}hide {
        display: none;
    }
    .#{$prefix}show {
        display: block;
    }
    .#{$prefix}show-flex {
        display: flex;
    }
    .#{$prefix}d-block {
        display: block;
    }
    .#{$prefix}d-inline {
        display: inline;
    }
    .#{$prefix}d-table {
        display: table;
    }
    .#{$prefix}d-inline-b {
        display: inline-block;
    }
    .#{$prefix}d-table-b {
        display: inline-table;
    }
    .#{$prefix}w-100 {
        width: 100%;
    }
    .#{$prefix}w-auto {
        width: auto;
    }
}

@include generatePadding('');
@include generateMargin('');
@include generateGlobal('');

@media only screen and (min-width: $medium) {
    @include generatePadding('m-');
    @include generateMargin('m-');
    @include generateGlobal('m-');
}

@media only screen and (min-width: $large) {
    @include generatePadding('l-');
    @include generateMargin('l-');
    @include generateGlobal('l-');
}

@media only screen and (min-width: $x-large) {
    @include generatePadding('xl-');
    @include generateMargin('xl-');
    @include generateGlobal('xl-');
}
